name: CD - Deploy XGBoost Model to Vertex AI

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    name: "Train and Deploy XGBoost Model to Vertex AI"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}

      - name: Set Up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: sixth-utility-449722-p8

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          pip install xgboost numpy scikit-learn google-cloud-storage

      - name: Train XGBoost Model
        run: |
          python train_xgboost.py  # This should save the model in model_registry/

      - name: Upload Model to GCS
        run: |
          gsutil cp -r model_registry gs://housing-data-bucket-poc/

      - name: Upload Model to Vertex AI Model Registry
        run: |
          gcloud ai models upload \
            --region=us-central1 \
            --display-name=house-price-xgb-model \
            --container-image-uri=us-docker.pkg.dev/vertex-ai/prediction/xgboost-cpu.1-3:latest \
            --artifact-uri=gs://housing-data-bucket-poc/model_registry/

      - name: Create Vertex AI Endpoint (If Not Exists)
        run: |
          ENDPOINT_ID=$(gcloud ai endpoints list --region=us-central1 --filter="displayName=house-price-endpoint" --format="value(name)" | head -n 1)

          if [ -z "$ENDPOINT_ID" ]; then
              echo "Creating new endpoint..."
              gcloud ai endpoints create \
                --region=us-central1 \
                --display-name=house-price-endpoint
          else
              echo "Endpoint already exists: $ENDPOINT_ID"
          fi

      - name: Deploy Model to Vertex AI Endpoint
        run: |
          MODEL_ID=$(gcloud ai models list --region=us-central1 --filter="displayName=house-price-xgb-model" --format="value(name)" | head -n 1)
          ENDPOINT_ID=$(gcloud ai endpoints list --region=us-central1 --filter="displayName=house-price-endpoint" --format="value(name)" | head -n 1)

          echo "MODEL_ID: $MODEL_ID"
          echo "ENDPOINT_ID: $ENDPOINT_ID"

          gcloud ai endpoints deploy-model $ENDPOINT_ID \
            --region=us-central1 \
            --model=$MODEL_ID \
            --display-name=house-price-deployment \
            --machine-type=n1-standard-8 \
            --min-replica-count=1 \
            --max-replica-count=1
